const {outputFile, readJson} = require('fs-extra')
const {join} = require('path')
const {compile} = require('json-schema-to-typescript')
const glob = require('glob')

const getPartialFilename = file => file.split(/\/|\./)[1] // This inscrutable regex just splits the string on / and .

glob('schema/*.json', async (err, files) => {
    if (err) {
        console.log(err)
    }
    console.log(files)

    for (const file of files) {
        const partialName = getPartialFilename(file)

        const jsonSchema = await readJson(file)

        compile(jsonSchema, partialName).then(types => {
            outputFile(
                join(
                    __dirname,
                    '..',
                    'src',
                    'generated-types',
                    `${partialName}.ts`
                ),
                types,
                'utf-8'
            )
        })
    }

    // Ignore the weird styling here, template strings include spaces/newlines which I don't want in the generated file
    const autoGenComment = `/* tslint:disable */
/**
 * This file was automatically generated by generateModel.js.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSON Schema files,
 * and run generateModel.js to regenerate this file.
 */
`

    const exportAllTypesFile = files.reduce(
        (acc, curr) =>
            (acc += `export * from './${getPartialFilename(curr)}'\n`),
        autoGenComment
    )
    outputFile(
        join(__dirname, '..', 'src', 'generated-types', `index.ts`),
        exportAllTypesFile,
        'utf-8'
    )
})
